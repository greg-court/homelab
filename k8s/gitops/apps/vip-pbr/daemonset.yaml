apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vip-pbr
  namespace: kube-system
  labels: { app: vip-pbr }
spec:
  selector:
    matchLabels: { app: vip-pbr }
  template:
    metadata:
      labels: { app: vip-pbr }
    spec:
      hostNetwork: true
      tolerations:
        - key: 'node-role.kubernetes.io/control-plane'
          operator: 'Exists'
          effect: 'NoSchedule'
      containers:
        - name: pbr
          image: nicolaka/netshoot:latest
          securityContext: { privileged: true } # needs CAP_NET_ADMIN
          command: ['/bin/sh', '-c']
          args:
            - |
              set -u

              # Table 102 -> VLAN 2 (VIP 192.168.2.240)
              ip -4 route replace 192.168.2.0/24 dev bond0    scope link table 102
              ip -4 route replace default via 192.168.2.1 dev bond0           table 102
              ip -4 rule  del     from 192.168.2.240/32 table 102 2>/dev/null || true
              ip -4 rule  add pref 102 from 192.168.2.240/32 lookup 102

              # Table 103 -> VLAN 3 (VIP 192.168.3.240)
              ip -4 route replace 192.168.3.0/24 dev bond0.3  scope link table 103
              ip -4 route replace default via 192.168.3.1 dev bond0.3         table 103
              ip -4 rule  del     from 192.168.3.240/32 table 103 2>/dev/null || true
              ip -4 rule  add pref 103 from 192.168.3.240/32 lookup 103

              # Table 104 -> VLAN 4 (VIP 192.168.4.240)
              ip -4 route replace 192.168.4.0/24 dev bond0.4  scope link table 104
              ip -4 route replace default via 192.168.4.1 dev bond0.4         table 104
              ip -4 rule  del     from 192.168.4.240/32 table 104 2>/dev/null || true
              ip -4 rule  add pref 104 from 192.168.4.240/32 lookup 104

              exec tail -f /dev/null # keep pod alive
