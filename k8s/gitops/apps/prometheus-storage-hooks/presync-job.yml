apiVersion: batch/v1
kind: Job
metadata:
  name: prometheus-storage-presync
  namespace: monitoring
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: '0'
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  backoffLimit: 1
  template:
    spec:
      serviceAccountName: prometheus-storage-maint
      restartPolicy: OnFailure
      containers:
        - name: rebind
          image: bitnami/kubectl:1.30
          command: ['/bin/sh', '-c']
          args:
            - |
              set -euo pipefail
              NS=monitoring
              MARKER=prometheus-storage-rebind-done

              # already ran once?
              if kubectl -n "$NS" get cm "$MARKER" >/dev/null 2>&1; then
                echo "Marker exists; nothing to do."; exit 0
              fi

              echo "Scale Prometheus via CR to 0 (avoid operator race)"
              PROM_CR="$(kubectl -n "$NS" get prometheus -o name | head -n1 || true)"
              if [ -n "$PROM_CR" ]; then
                kubectl -n "$NS" patch "$PROM_CR" --type=merge -p '{"spec":{"replicas":0}}' || true
              fi

              echo "Wait for Prometheus pods to terminate"
              kubectl -n "$NS" wait --for=delete pod -l app.kubernetes.io/name=prometheus --timeout=180s || true

              echo "Delete Prometheus PVCs"
              kubectl -n "$NS" delete pvc -l app.kubernetes.io/name=prometheus,app.kubernetes.io/instance=kube-prometheus-stack --ignore-not-found

              echo "Delete stray legacy PV (ignore if missing)"
              kubectl delete pv pv-prometheus-local-01 --ignore-not-found

              echo "Create run-once marker"
              kubectl -n "$NS" create cm "$MARKER" --from-literal=ts="$(date -Iseconds)" || true
