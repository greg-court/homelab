# Renovate config for your homelab repo
# Docs: https://docs.renovatebot.com/
# File name: renovate.yaml  (in repo root)

$schema: https://docs.renovatebot.com/renovate-schema.json

extends:
  - config:best-practices
  - :rebaseStalePrs

labels:
  - deps
  - renovate

timezone: Europe/London
schedule:
  - after 08:00 and before 18:00 on Monday to Friday

prConcurrentLimit: 10
prHourlyLimit: 6
dependencyDashboard: true
rebaseWhen: conflicted

# Enable the managers you use
enabledManagers:
  - helmv3              # Chart.yaml
  - helmfile            # helmfile.yaml
  - helm-values         # values.yaml with chart refs
  - kustomize           # kustomization.yaml
  - kubernetes          # raw K8s YAML image refs
  - argocd              # Argo CD Application YAMLs (chart targetRevision, images)
  - dockerfile          # Dockerfiles
  - docker-compose
  - github-actions
  - terraform
  - terragrunt
  - ansible-galaxy
  - custom.regex        # our regex catcher for stray image: tags

# Where to scan for K8s and Argo CD files
kubernetes:
  managerFilePatterns:
    - "^k8s/gitops/apps/.+\\.ya?ml$"
    - "^k8s/gitops/clusters/.+\\.ya?ml$"

argocd:
  managerFilePatterns:
    - "^k8s/gitops/clusters/.+\\.ya?ml$"

# Optional: pin images to digests (immutable deploys)
docker:
  pinDigests: true
kustomize:
  pinDigests: true
kubernetes:
  pinDigests: true

# Keep Renovate away from state/artefacts
ignorePaths:
  - "**/.terraform/**"
  - "**/terraform.tfstate*"
  - "**/terraform.tfvars"
  - "**/terraform/**/talosconfig"
  - "**/k8s/terraform.tfstate*"

# Public registries don't need auth, but add private creds here (via env or Mend portal)
hostRules:
  - hostType: docker
    matchHost: ghcr.io
    username: github
    password: "{{ env.GITHUB_TOKEN }}"
  - hostType: helm
    matchHost: charts.jetstack.io
  - hostType: helm
    matchHost: prometheus-community.github.io
  - hostType: helm
    matchHost: grafana.github.io
  - hostType: helm
    matchHost: traefik.github.io
  - hostType: helm
    matchHost: metallb.github.io
  - hostType: helm
    matchHost: charts.external-secrets.io

packageRules:
  # Group Helm updates together
  - matchManagers: [helmv3, helmfile, helm-values]
    groupName: helm charts

  # Group container base images
  - matchManagers: [dockerfile, docker-compose]
    groupName: base/container images

  # Group GitHub Actions
  - matchManagers: [github-actions]
    groupName: github actions

  # Group Terraform
  - matchManagers: [terraform, terragrunt]
    groupName: terraform providers/modules

  # Group Ansible Galaxy
  - matchManagers: [ansible-galaxy]
    groupName: ansible galaxy

  # ArgoCD/K8s updates grouped per cluster (so TRUST/DMZ changes don't mix)
  - matchManagers: [kubernetes, kustomize, argocd]
    matchFileNames:
      - "k8s/gitops/clusters/dmz/**"
    groupName: platform (dmz)
  - matchManagers: [kubernetes, kustomize, argocd]
    matchFileNames:
      - "k8s/gitops/clusters/trust/**"
    groupName: platform (trust)

  # Helm: wait a day to dodge flaky releases
  - matchDatasources: [helm]
    stabilityDays: 1

  # Auto-merge safe stuff
  - matchManagers: [github-actions]
    matchUpdateTypes: [minor, patch]
    automerge: true
  - matchManagers: [dockerfile, docker-compose]
    matchUpdateTypes: [patch]
    automerge: true

  # Terraform: refresh lockfiles weekly
  - matchManagers: [terraform, terragrunt]
    extends: [":semanticCommitType(chore)"]
    schedule: ["on monday"]
    postUpdateOptions: ["terraformLockFile"]

# Catch any stray "image: repo:tag" lines in YAML under gitops
customManagers:
  - customType: regex
    description: Catch image tags i
