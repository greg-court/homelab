{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:best-practices",
    ":pinDigestsDisabled",
    ":rebaseStalePrs"
  ],
  "labels": ["deps", "renovate"],
  "timezone": "Europe/London",
  "prConcurrentLimit": 10,
  "prHourlyLimit": 6,
  "dependencyDashboard": true,
  "rebaseWhen": "conflicted",

  "enabledManagers": [
    "helmv3",
    "helmfile",
    "helm-values",
    "kustomize",
    "kubernetes",
    "argocd",
    "dockerfile",
    "docker-compose",
    "github-actions",
    "terraform",
    "terragrunt",
    "ansible-galaxy",
    "regex"
  ],

  "ignorePaths": [
    "**/terraform.tfstate*",
    "**/terraform.tfvars",
    "**/k8s/terraform.tfstate*"
  ],

  "hostRules": [
    {
      "hostType": "docker",
      "matchHost": "ghcr.io",
      "username": "github",
      "password": "{{ env.GITHUB_TOKEN }}"
    },
    { "hostType": "helm", "matchHost": "charts.jetstack.io" },
    { "hostType": "helm", "matchHost": "prometheus-community.github.io" },
    { "hostType": "helm", "matchHost": "grafana.github.io" },
    { "hostType": "helm", "matchHost": "traefik.github.io" },
    { "hostType": "helm", "matchHost": "metallb.github.io" },
    { "hostType": "helm", "matchHost": "charts.external-secrets.io" },
    { "hostType": "helm", "matchHost": "helm.cilium.io" }
  ],

  "packageRules": [
    {
      "matchDatasources": ["docker"],
      "pinDigests": false
    },
    {
      "matchManagers": [
        "github-actions",
        "helmv3",
        "helmfile",
        "helm-values",
        "dockerfile",
        "docker-compose",
        "kubernetes",
        "kustomize",
        "argocd",
        "regex"
      ],
      "pinDigests": false
    },
    {
      "matchUpdateTypes": ["digest", "pinDigest"],
      "enabled": false
    },
    {
      "matchManagers": ["helmv3", "helmfile"],
      "rangeStrategy": "pin"
    },
    {
      "matchManagers": ["helmv3", "helmfile", "helm-values"],
      "groupName": "helm charts"
    },
    {
      "matchManagers": ["dockerfile", "docker-compose"],
      "groupName": "base/container images"
    },
    {
      "matchManagers": ["github-actions"],
      "groupName": "github actions"
    },
    {
      "matchManagers": ["terraform", "terragrunt"],
      "groupName": "terraform providers/modules"
    },
    {
      "matchManagers": ["ansible-galaxy"],
      "groupName": "ansible galaxy"
    },
    {
      "matchManagers": ["kubernetes", "kustomize", "argocd"],
      "groupName": "platform"
    },
    {
      "matchDatasources": ["helm"],
      "minimumReleaseAge": "1 day"
    },
    {
      "matchManagers": ["github-actions"],
      "matchUpdateTypes": ["minor", "patch"],
      "automerge": true
    },
    {
      "matchManagers": ["dockerfile", "docker-compose"],
      "matchUpdateTypes": ["patch"],
      "automerge": true
    },
    {
      "matchManagers": ["terraform", "terragrunt"],
      "extends": [":semanticCommitType(chore)"],
      "postUpdateOptions": ["terraformLockFile"]
    }
  ],

  "customManagers": [
    {
      "customType": "regex",
      "description": "Catch image tags in arbitrary YAML under k8s/gitops",
      "fileMatch": ["(^|/)k8s/gitops/.+\\.ya?ml$"],
      "matchStrings": [
        "image:\\s*(?:\\\"|' )?(?<depName>[^:\\s\\\"']+):(?<currentValue>[^\\s#\\\"']+)"
      ],
      "datasourceTemplate": "docker"
    }
  ]
}
